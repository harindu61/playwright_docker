name: 'Generate Playwright Snapshot'

on: workflow_dispatch

jobs:
  pr_pipeline:
    runs-on: [ubuntu-latest]
    env:
      BRANCH_NAME: "${{ github.ref_name }}-update-visual-images"

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run Node app
        run: |
          cd node-app/
          npm install
          node server.js &

      - name: Pull Docker image
        run: docker pull harindu91/playwright-docker:1.0.6

      - name: Run Tests on Docker container
        run: docker run --rm -v "${GITHUB_WORKSPACE}/playwright/tests:/app/tests" -v "${GITHUB_WORKSPACE}/playwright/playwright-report:/app/playwright-report" -v "${GITHUB_WORKSPACE}/playwright/playwright.config.js:/app/playwright.config.js" harindu91/playwright-docker:1.0.6 npx playwright test --update-snapshots
  
      - name: Export the image snapshot
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: snapshot
          path: playwright/tests/visual-tests
          retention-days: 1
      
      - name: Set Git User
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Create a new branch and commit changes
        run: |
          git checkout -b ${{ env.BRANCH_NAME }}
          git add playwright/tests/visual-tests
          git commit -m "Update image snapshots for ${{ github.ref_name }}"
          
      - name: Push branch to origin
        run: git push origin ${{ env.BRANCH_NAME }}

      - name: Raise pull request
        uses: octokit/request-action@v2.x
        with:
          method: POST
          url: https://api.github.com/repos/${{ github.repository }}/pulls
          body: |
            {
              "title": "Update image snapshots for ${{ github.ref_name }}",
              "body": "Update image snapshots for ${{ github.ref_name }}",
              "head": ${{ env.BRANCH_NAME }},
              "base": ${{ github.ref_name }},
              "reviewers": ["${{ github.actor }}"]
            }
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}

      - name: Prune docker images
        if: always()
        run: docker images && docker system prune -a --volumes -f

